<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Surveys extends CI_Controller{    /////////////////////////////////////    ////////// DECLARING VARIABLES //////    /////////////////////////////////////    var $data = array();    /////////////////////////////////////    ////////// CONSTRUCTOR //////////////    /////////////////////////////////////    function __construct()    {        parent::__construct();        ini_set('display_errors', 1);        $this->load->model('mdl_app','app');        if(!$this->session->userdata('user')){            $this->session->set_flashdata('error','Login to view page');            redirect(base_url('login'));        }    }    /////////////////////////////////////    ////////// INDEX FUNCTION ///////////    /////////////////////////////////////    public function index()    {        $content = $this->app->getContent('surveys',false,false,false,'id','DESC');        foreach ($content as $k=>$val) {            $totalQues = $this->app->getCount('questions',array('surveyId'=>$val['id']));;            $val['totalQuestions'] = $totalQues;            $content[$k] = $val;        }        $data['content'] = $content;        //echo '<pre>';print_r($data);exit;        $this->load->view('admin/template/header');        $this->load->view('admin/surveys',$data);        $this->load->view('admin/template/footer');    }    public function addSurvey(){        if ($this->input->server('REQUEST_METHOD') === 'POST') {            $this->load->library('form_validation');            $this->form_validation->set_rules('title', 'Title', 'trim|required');            $this->form_validation->set_rules('type', 'Type', 'trim|required');            $this->form_validation->set_rules('validUpto', 'Valid UpTo', 'trim|required');            if ($this->form_validation->run() == FALSE)            {                redirect($_SERVER['HTTP_REFERER']);            }            else {                $data = array(                    'title' => $this->input->post('title'),                    'type' => $this->input->post('type'),                    'validUpto' => $this->input->post('validUpto')                );                $isUpdated = $this->app->addContent('surveys', $data);                $surveyId = $this->app->lastId();                if ($isUpdated) {                    $this->session->set_flashdata('success', "Survey added successfully. Please add question");                    redirect("admin/surveys/addQuestion/".$surveyId);                } else {                    $this->session->set_flashdata('error', 'Something Went Wrong... Try Again');                    redirect($_SERVER['HTTP_REFERER']);                }            }        }//        print_r($data);exit;        $this->load->view('admin/template/header');        $this->load->view('admin/addSurvey');        $this->load->view('admin/template/footer');    }    public function editReport($id){        if ($this->input->server('REQUEST_METHOD') === 'POST') {            $this->load->library('form_validation');            $this->form_validation->set_rules('title', 'Title', 'trim|required');            $this->form_validation->set_rules('author', 'Author', 'trim|required');            $this->form_validation->set_rules('type', 'Type', 'trim|required');            if ($this->form_validation->run() == FALSE)            {                redirect($_SERVER['HTTP_REFERER']);            }            else {                $file = $this->imageUpload('file');                $data = array(                    'title' => $this->input->post('title'),                    'author' => $this->input->post('author'),                    'type' => $this->input->post('type'),                    'detail'=>$this->input->post('detail')              //      'file' => $file,                //    'image' => $image                );                if($file)                    $data['file'] = $file;                $isUpdated = $this->app->updateRecord($this->tbl, array('id'=>$id),$data);                if ($isUpdated) {                    $this->session->set_flashdata('success', "Financial Report updated successfully");                    redirect("admin/reports");                } else {                    $this->session->set_flashdata('success', 'Nothing Changed');                    redirect("admin/reports");                }            }        }        $content = $this->app->getContent($this->tbl,'id',$id);        $data['content'] = $content[0];//        print_r($data);exit;        $this->load->view('admin/template/header');        $this->load->view('admin/editReport',$data);        $this->load->view('admin/template/footer');    }    function surveyDelete($id){        $this->app->delete('surveys','id',$id);        $this->app->delete('questions','surveyId',$id);        $this->session->set_flashdata('success', "Survey deleted successfully");        redirect("admin/surveys");    }    public function questionList($surveyId)    {        $content = $this->app->getContent('questions','surveyId',$surveyId,false,'id','DESC');        $survey = $this->app->getContent('surveys','id',$surveyId,false,'id','DESC');        $data['content'] = $content;        $data['survey'] = $survey[0];        //echo '<pre>';print_r($data);exit;        $this->load->view('admin/template/header');        $this->load->view('admin/questionList',$data);        $this->load->view('admin/template/footer');    }    public function report($surveyId,$questionId)    {        $isConducted  = false;        $surveys = $this->app->getContent('surveys','id',$surveyId,false,'id','DESC');        $questions = $this->app->getContent('questions','id',$questionId,false,'id','DESC');        //$conditions = array('questionId'=>$questionId,'surveyId'=>$surveyId);        $options = $this->app->getContent('options','questionId',$questionId,false,'id','DESC');//var_dump($questions);exit;        if($questions[0]['type'] == 'open'){            $answers = $this->app->getContent('answers', array('questionId' => $questionId, 'surveyId' => $surveyId));            //echo '<pre>';print_r($answers);exit;            $data['content'] = $answers;            $this->load->view('admin/template/header');            $this->load->view('admin/open',$data);            $this->load->view('admin/template/footer');        }else {            if ($questions[0]['type'] == 'Multiple-Choice') {                foreach ($options as $k => $val) {                    $answer = $this->app->getCount('answers',                        array(                            'FIND_IN_SET("' . $val['id'] . '",answer) !=' => "0",                            'questionId' => $questionId,                            'surveyId' => $surveyId                        )                    );                    $options[$k]['count'] = $answer;                }                $data['questions'] = $questions[0];                $data['surveys'] = $surveys[0];                $data['options'] = $options;                //echo '<pre>';print_r($data);exit;                $this->load->view('admin/template/header');                $this->load->view('admin/reports',$data);                $this->load->view('admin/template/footer');                //echo '<pre>';print_r($options);exit;            } else if ($questions[0]['type'] == 'Scale-Numeric') {                $answers = $this->app->getContent('answers', array('questionId' => $questionId, 'surveyId' => $surveyId));                $values = array();                for($i=1;$i<=$options[0]['title'];$i++){                    $values[$i]['title'] = $i;                    $values[$i]['count'] = 0;                }                foreach ($values as $k => $val) {                    $count = 0;                    foreach ($answers as $key => $v) {                        if ($val['title'] == $v['answer']) {                            $count = $count + 1;                            $values[$k]['count'] = $count;                        }                    }                }                $options = $values;                $data['questions'] = $questions[0];                $data['surveys'] = $surveys[0];                $data['options'] = $options;                //echo '<pre>';print_r($data);exit;                $this->load->view('admin/template/header');                $this->load->view('admin/reports',$data);                $this->load->view('admin/template/footer');                /*echo '<pre>';                print_r($values);                echo '<pre>';                print_r($options);                echo '<pre>';                print_r($answers);                exit;*/            } else if ($questions[0]['type'] == 'Ranking') {                $answers = $this->app->getContent('answers', array('questionId' => $questionId, 'surveyId' => $surveyId));                $ListDataSet = array();                foreach ($answers as $k => $val) {                    $valuePairs = explode(',',$val['answer']);                    $totalQuestions = count($valuePairs);                    foreach ($valuePairs as $key=>$va) {                        $questionAnswerPairList = explode('|',$va);                        $optionList = $questionAnswerPairList[0];                        $rank = $questionAnswerPairList[1];                        $avg = $rank/$totalQuestions;                        if(isset($ListDataSet[$optionList])){                            $ListDataSet[$optionList] = $ListDataSet[$optionList] + $avg;                        }else {                            $ListDataSet[$optionList] = $avg;                        }                    }                }                $set = array();                $j=0;                foreach ($ListDataSet as $k=>$vl) {                    foreach ($options as $v) {                        if($k==$v['id']){                            $set[$j]['title'] = $v['title'];                            $set[$j]['count'] = (int)$vl;                        }                    }                    $j++;                }                $options = $set;                $data['questions'] = $questions[0];                $data['surveys'] = $surveys[0];                $data['options'] = $options;                //echo '<pre>';print_r($data);exit;                $this->load->view('admin/template/header');                $this->load->view('admin/reports',$data);                $this->load->view('admin/template/footer');                /*echo '<pre>';print_r($set);                echo '<pre>';print_r($ListDataSet);exit;                echo '<pre>';                print_r($options);                echo '<pre>';                print_r($answers);                exit;*/            } else {                foreach ($options as $k => $val) {                    $answers = $this->app->getCount('answers', array('answer' => $val['id'], 'questionId' => $questionId, 'surveyId' => $surveyId));                    /*if ($answers > 0) {                        $isConducted = true;                    }*/                    $options[$k]['count'] = $answers;                    /*echo '<pre>';                    print_r($options);                    exit;*/                }                $data['questions'] = $questions[0];                $data['surveys'] = $surveys[0];                $data['options'] = $options;                //echo '<pre>';print_r($data);exit;                $this->load->view('admin/template/header');                $this->load->view('admin/reports',$data);                $this->load->view('admin/template/footer');            }        }        /*if(!$isConducted){            $this->session->set_flashdata('error', "Survey is not yet conducted for this question");            redirect("admin/surveys/questionList/".$surveyId);        }*/    }    /***********************************************     *     * Questions portion     *     ******************************************/    public function addQuestion($surveyId){        if ($this->input->server('REQUEST_METHOD') === 'POST') {            //echo '<pre>';print_r($_POST);exit;            $this->load->library('form_validation');            $this->form_validation->set_rules('title', 'Title', 'trim|required');            if ($this->form_validation->run() == FALSE)            {                redirect($_SERVER['HTTP_REFERER']);            }            else {                $data = array(                    'title' => $this->input->post('title'),                    'type' => $this->input->post('type'),                    'surveyId' => $this->input->post('surveyId')                );                $isUpdated = $this->app->addContent('questions', $data);                $questionId = $this->app->lastId();                if ($isUpdated) {                    // if type is optional                    if($this->input->post('type') != 'open') {                        // parse options data                        $options = array();                        foreach ($this->input->post('options') as $k => $value) {                            $option['title'] = $value;                            $option['questionId'] = $questionId;                            $options[] = $option;                        }                        // add data                        $res = $this->app->insertBatch('options', $options);                    }                    if ($this->input->post('submit') == 'submit') {                        $this->session->set_flashdata('success', "Question added successfully");                        redirect("admin/surveys");                    } else {                        $this->session->set_flashdata('success', "Question added successfully. Add new");                        redirect($_SERVER['HTTP_REFERER']);                    }                } else {                    $this->session->set_flashdata('error', 'Something Went Wrong... Try Again');                    redirect($_SERVER['HTTP_REFERER']);                }            }        }//        print_r($data);exit;        $data['surveyId'] = $surveyId;        $this->load->view('admin/template/header');        $this->load->view('admin/addQuestion',$data);        $this->load->view('admin/template/footer');    }}