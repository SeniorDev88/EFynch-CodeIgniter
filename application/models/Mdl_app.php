<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');class Mdl_app extends CI_Model{    function getContent($tbl,$conditionField=false,$conditionsVal=false,$fields= false,$orderKey=false,$orderBy=false,$limit= false,$start = 0,$group=false){        if($conditionField != false)            $this->db->where($conditionField, $conditionsVal);        if($fields != false)            $this->db->select($fields);        if($orderBy != false)            $this->db->order_by($orderKey, $orderBy);        if($limit != false)            $this->db->limit($limit,$start);        if($group != false)        $this->db->group_by($group);        $result = $this->db->get($tbl)->result_array();        if (count($result) > 0)            return $result;        else            return $result;    }    function getContentByCustomConditions($tbl,$query,$fields= false,$orderKey=false,$orderBy=false,$limit= false,$start = 0,$group=false){        if($query != false)            $this->db->where($query);        if($fields != false)            $this->db->select($fields);        if($orderBy != false)            $this->db->order_by($orderKey, $orderBy);        if($limit != false)            $this->db->limit($limit,$start);        if($group != false)            $this->db->group_by($group);        $result = $this->db->get($tbl)->result_array();        if (count($result) > 0)            return $result;        else            return $result;    }    // get content by multiple conditions    function getContentWMC($tbl,$multiConditions=false,$fields= false,$orderKey=false,$orderBy=false,$limit= false,$start = 0,$group=false,$inOperator=false,$inFields=false){        if($multiConditions != false){            foreach ($multiConditions as $k=>$v) {                $this->db->where($k, $v);            }        }        if($inOperator != false)            $this->db->where_in($inOperator, $inFields);        if($fields != false)            $this->db->select($fields);        if($orderBy != false)            $this->db->order_by($orderKey, $orderBy);        if($limit != false)            $this->db->limit($limit,$start);        if($group != false)            $this->db->group_by($group);        $result = $this->db->get($tbl)->result_array();        if (count($result) > 0)            return $result;        else            return $result;    }    function addContent($tbl,$data){        $this->db->insert($tbl,$data);        return ($this->db->affected_rows() != 1) ? false : true;    }    function updateBatch($data){        $this->db->update_batch('dms_appeals', $data, 'id');    }    function insertBatch($tbl,$data){        $this->db->insert_batch($tbl,$data);    }    function updateRecord($tbl,$multiConditions,$data){        if($multiConditions != false){            foreach ($multiConditions as $k=>$v) {                $this->db->where($k, $v);            }        }        $this->db->update($tbl ,$data);        if($this->db->affected_rows() > 0){            return true; // your code        }else{            return false; // your code.        }    }    function updateQuery($query){        $this->db->query($query);    }    function getUniqueRec(){    }    function getData($query){        if(isset($query['fields']))            $this->db->select($query['fields']);        if(isset($query['having']))            $this->db->having($query['having']);        if(isset($query['orHaving']))            $this->db->or_having($query['orHaving']);        if(isset($query['custom']))            $this->db->where($query['custom']);        if(isset($query['where']))            $this->db->where($query['where']);        if(isset($query['orWhere']))            $this->db->or_where($query['orWhere']);        if(isset($query['whereIn'])){            foreach ($query['whereIn'] as $k=>$v) {                $this->db->where_in($k,$v);            }        }        if(isset($query['orWhereIn'])){            foreach ($query['orWhereIn'] as $k=>$v) {                $this->db->or_where_in($k,$v);            }        }        if(isset($query['join'])) {            foreach ($query['join'] as $k => $v) {                $this->db->join($v['joinTbl'], $v['on'], $v['type']);            }        }        if(isset($query['order']))            $this->db->order_by($query['order']);        if(isset($query['group']))            $this->db->group_by($query['group']);        if(isset($query['like'])){            foreach ($query['like'] as $field=>$match) {                $this->db->like($field,$match);            }        }        if(isset($query['or_like'])){            foreach ($query['or_like'] as $field=>$match) {                $this->db->or_like($field, $match);            }        }        if(isset($query['limit']))            $this->db->limit($query['limit'],$query['offset']);//echo '<pre>';print_r($query);exit;        $result = $this->db->get($query['table'])->result_array();        if (count($result) > 0)            return $result;        else            return $result;    }    function getDataCount($query){        //echo '<pre>';print_r($query['conditions']);exit;        if(isset($query['fields']))            $this->db->select($query['fields']);        if(isset($query['having']))            $this->db->having($query['having']);        if(isset($query['orHaving']))            $this->db->or_having($query['orHaving']);        if(isset($query['custom']))            $this->db->where($query['custom']);        if(isset($query['where']))            $this->db->where($query['where']);        if(isset($query['orWhere']))            $this->db->or_where($query['orWhere']);        if(isset($query['whereIn'])){            foreach ($query['whereIn'] as $k=>$v) {                $this->db->where_in($k,$v);            }        }        if(isset($query['orWhereIn'])){            foreach ($query['orWhereIn'] as $k=>$v) {                $this->db->or_where_in($k,$v);            }        }        if(isset($query['join'])) {            foreach ($query['join'] as $k => $v) {                $this->db->join($v['joinTbl'], $v['on'], $v['type']);            }        }        if(isset($query['order']))            $this->db->order_by($query['order']);        if(isset($query['group']))            $this->db->group_by($query['group']);        if(isset($query['like'])){            foreach ($query['like'] as $field=>$match) {                $this->db->like($field,$match);            }        }        if(isset($query['or_like'])){            foreach ($query['or_like'] as $field=>$match) {                $this->db->or_like($field, $match);            }        }        if(isset($query['limit']))            $this->db->limit($query['limit'],$query['offset']);        return $this->db->count_all_results($query['table']);    }    public function delete($tbl,$field,$id){        $this->db->where($field, $id);        $this->db->delete($tbl);    }    function lastId(){        return $this->db->insert_id();    }    function getCount($tbl,$multiConditions,$inOperator= false,$inFields=false){        if($multiConditions != false){            foreach ($multiConditions as $k=>$v) {                $this->db->where($k, $v);            }        }        if($inOperator != false)            $this->db->where_in($inOperator, $inFields);        return $this->db->count_all_results($tbl);    }    function joins(){        $this->db->limit(1000);        $this->db->order_by("surveys.created", "DESC");        $this->db->select('surveys.id,surveys.title,questions.title as question');        $this->db->join('questions', 'questions.surveyId = surveys.id');        //$this->db->group_by("itemId");        $result = $this->db->get('surveys')->result_array();        /* echo '<pre>';         print_r($result);exit;*/        if (count($result) > 0){            return $result;        }        else            return false;    }    function check_pre_password($password, $email)    {        $result = $this->db->where('password', md5($password))->where('email', $email)->get('efy_admin_users');        if($result->num_rows() > 0)        {            return true;        }        else        {            return false;        }    }    function update_password($data, $email)    {        return $this->db->where('email', $email)->update('efy_admin_users', $data);    }}